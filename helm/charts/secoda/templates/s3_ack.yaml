{{ $val := .Values.services.s3 -}}
{{ $globals := .Values.global -}}
{{ $datastores := .Values.datastores -}}
{{ $chartVersion := .Chart.AppVersion -}}
{{- $fullName := include "secoda.fullname" . -}}
apiVersion: s3.services.k8s.aws/v1alpha1
kind: Bucket
metadata:
  name: "{{ $fullName }}-s3"
spec:
  acl: private
  cors: 
    corsRules:
    - allowedHeaders:
      - "*"
      allowedMethods:
      - PUT
      - POST
      - GET
      allowedOrigins:
      - "*"
      exposeHeaders:
      - ETag
      id: "{{ $fullName }}-s3-cors"
      maxAgeSeconds: 3000
  createBucketConfiguration: 
    locationConstraint: {{ $val.s3_region }}
  encryption: 
    rules:
    - applyServerSideEncryptionByDefault: 
        sseAlgorithm: AES256
      bucketKeyEnabled: false
  name: {{ $val.s3_name }}
  ownershipControls: 
    rules:
    - objectOwnership: BucketOwnerPreferred
  publicAccessBlock: 
    blockPublicACLs: true
    blockPublicPolicy: true
    ignorePublicACLs: true
    restrictPublicBuckets: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ $fullName }}-s3-cm"
data: {}
---
apiVersion: services.k8s.aws/v1alpha1
kind: FieldExport
metadata:
  name: "{{ $fullName }}-s3-bucket"
spec:
  to:
    name: "{{ $fullName }}-s3-cm"
    kind: configmap
  from:
    path: ".spec.name"
    resource:
      group: s3.services.k8s.aws
      kind: Bucket
      name: "{{ $fullName }}-s3"
